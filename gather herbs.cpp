/*辰辰是个天资聪颖的孩子，他的梦想是成为世界上最伟大的医师。为此，他想拜附近最有威望的医师为师。
医师为了判断他的资质，给他出了一个难题。
医师把他带到一个到处都是草药的山洞里对他说：“孩子，这个山洞里有一些不同的草药，采每一株都需要一些时间，
每一株也有它自身的价值。我会给你一段时间，在这段时间里，你可以采到一些草药。
如果你是一个聪明的孩子，你应该可以让采到的草药的总价值最大。”

如果你是辰辰，你能完成这个任务吗？*/


#include <iostream>

using namespace std;
int a[1000],b[1000],s[1000];
//s[n]表示n s时间内能达到总价最高值。
//a[i] and b[i]分别代表草药采集花费时间和草药价值
int main()
{
  // 请在此输入您的代码
  
  int m,n;   //m s表示采药时间，n 表示草药数目
  cin>>m>>n;
  for(int i=0;i<n;i++)
  cin>>a[i]>>b[i];
  for(int i=0;i<n;i++){
    for(int j=m;j>=a[i];j--){
      s[j]=max(s[j],s[j-a[i]]+b[i]);//计算达到m s内总价值最大的前一步总价值最大值
    }
  }
  cout<<s[m];
  return 0;
}
//动态规划四部曲
//1.确定状态(两个核心:1最后一步 2化成子问题)    倒推法，由最后一步倒推过程，知道达到初始条件s[0]=0为止。
//2转移方程
//3开始和边界条件
//4计算顺序
